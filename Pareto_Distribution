### Test statistics for Cramer von Mises- and Anderson Darling test for Goodness of fit
W2 <- function(x){
  n <- length(x)
  result <- sum((x - (seq(1, 2 * n - 1, 2) / (2 * n))) ** 2)
  return(result + 1 / (12 * n))
}

A2 <- function(x){
  n <- length(x)
  return(- n - (1 / n) * sum(seq(1, 2 * n - 1, 2) * (log(x) + log(1 - rev(x)))))
}

### Create a 'print' method for class "gof_test"
print.gof_test <- function(x){
  cat('Results of Goodness-of-Fit Test\n-------------------------------\n\nTest Method:                     ',x$Method,'\n\nNull distribution:               ',x$Distribution,'\n\nSample Size:                     ',x$n,'\n\nEstimated Parameters:            ',x$Estimated,'\n\nParameters (and Estimations):    ',x$Parameters,'\n\nTest Statistic:                  ',x$Statistic_Name,' = ',x$Statistic,'\n\n\nIntervals for H0:\n',x$Critical,'', sep='')
}

# Estimation
est_pareto <- function(x, param = c(NA,NA)){
  n <- length(x)
  
  # scale unknown, shape known, Case 1
  if (is.na(param[1]) == TRUE & is.na(param[2]) != TRUE){
    scale <- min(x, na.rm = TRUE)
    return(c(scale, param[2]))
  }
  
  # scale known, shape unknown, Case 2
  if (is.na(param[1]) != TRUE & is.na(param[2]) == TRUE){
    shape <- n / sum(log(x / param[1]))
    return(c(param[1], shape))
  }
  
  # both unknown, Case 3
  if (is.na(param[1]) == TRUE & is.na(param[2]) == TRUE){
    scale <- min(x, na.rm = TRUE)
    shape <- n / sum(log(x / scale))
    return(c(scale, shape))
  }
}

# Parameters are given as scale, shape (xmin, alpha)
# Just perform a transformation to get an exponential value distribution, then call     
# the function exponential_gof
# Can only implement Case 2 atm. Case 1 and 3 should not give accurate critical values
# as the transformation depends on estimated parameter
gof_pareto <- function(x, statistic, param){
  x <- sort(x)
  n <- length(x)
  
  # Cramer von Mises
  if(statistic == "cvm"){
    
    # scale known, shape unknown, Case 2
      y <- log(x / param)
      exp_trans <- gof_exp(y, "cvm")
      shape <- exp_trans$Parameters
      result <- exp_trans$Statistic
      out <- list(Method = "CramÃ©r-von Mises Test for Goodness-of-Fit", Distribution = "Pareto", n = n, Estimated = "shape", Parameters = c(as.character(param),", ",as.character(shape)), Statistic = result, Statistic_Name = "W^2", Critical = ".25: [0,.116] ; .15: [0,.148] ; .10: [0,.175] ; .05: [0,.222] ; .025: [0,.271] ; .01: [0,0.338] ; .005: [0,0.390]")
      class(out) <- "gof_test"
      return(out)
  }
    

  # Anderson Darling
  if(statistic == "ad"){
    
    # scale known, shape unknown, Case 2
      y <- log(x / param)
      exp_trans <- gof_exp(y, "ad")
      shape <- exp_trans$Parameters
      result <- exp_trans$Statistic
      out <- list(Method = "Anderson-Darling Test for Goodness-of-Fit", Distribution = "Pareto", n = n, Estimated = "shape", Parameters = c(as.character(param),", ",as.character(shape)), Statistic = result, Statistic_Name = "A^2", Critical = ".25: [0,.736] ; .15: [0,.916] ; .10: [0,1.062] ; .05: [0,1.321] ; .025: [0,1.591] ; .01: [0,1.959] ; .005: [0,2.244]")
      class(out) <- "gof_test"
      return(out)
  }
}
