library(tidyverse)
library(EnvStats)
library(rootSolve)
library(SpatialExtremes)
library(pracma)
library(expint)

### Test statistics for Cramer von Mises- and Anderson Darling test for Goodness of fit
W2 <- function(x){
  n <- length(x)
  result <- sum((x - (seq(1, 2 * n - 1, 2) / (2 * n))) ** 2)
  return(result + 1 / (12 * n))
}

A2 <- function(x){
  n <- length(x)
  return(- n - (1 / n) * sum(seq(1, 2 * n - 1, 2) * (log(x) + log(1 - rev(x)))))
}

### Create a 'print' method for class "gof_test"
print.gof_test <- function(x){
  cat('Results of Goodness-of-Fit Test\n-------------------------------\n\nTest Method:                     ',x$Method,'\n\nNull distribution:               ',x$Distribution,'\n\nSample Size:                     ',x$n,'\n\nEstimated Parameters:            ',x$Estimated,'\n\nParameters (and Estimations):    ',x$Parameters,'\n\nTest Statistic:                  ',x$Statistic_Name,' = ',x$Statistic,'\n\n\nIntervals for H0:\n',x$Critical,'', sep='')
}

F_gpd <- function(x, scale, shape){
  return(1 - (1 - shape * x / scale) ** (1 / shape))
}

est_gpd <- function(x, param=c(NA,NA)){
  # Parameters given as scale > 0, shape < 1
  n <- length(x)
  
  # scale unknown, shape known, Case 1
  if (is.na(param[1]) == TRUE & is.na(param[2]) != TRUE){
    L <- function(a){
      return(n - (1 - param[2]) * sum(x / (a - param[2] * x)))
    }
    scale <- uniroot(L, c(0.0000001, 0.6), extendInt="yes")$root
    return(c(scale, param[2]))
  }
  
  # scale known, shape unknown, Case 2
  if (is.na(param[1]) != TRUE & is.na(param[2]) == TRUE){
    L <- function(k){
      - n * log(param[1]) - (1 - 1 / k) * sum(log(1 - k * x / param[1]))
    }
    shape <- optimize(L, interval = c(- 100, 0.999999), maximum = TRUE)$maximum
    return(c(param[1], shape))
  }
  
  # both unknown, Case 3
  if (is.na(param[1]) == TRUE & is.na(param[2]) == TRUE){
    L <- function(theta){
  return(- n - sum(log(1 - theta * x)) - n * log(- (1 / (n * theta)) * sum(log(1 - theta * x))))
    }
    theta_max <- optimize(L, interval = c(0.0000001, max(x)), maximum = TRUE)$maximum
    shape <- - 1 / n * sum(log(1 - theta_max * x))
    scale <- shape / theta_max
    return(c(scale, shape))
  }
}

# Parameters are given as scale, shape (a,k)
# Atm, Case 3 runs into computational errors that should (probably) not occur.
# Case 2 only works for negative shapes which is undesirable. 
gpd_gof <- function(x, statistic, param = c(NA, NA)){
  x <- sort(x)
  n <- length(x)
  
  # Cramer von Mises
  if(statistic == "cvm"){
    
    # scale unknown, shape known, Case 1
    if(is.na(param[1]) == TRUE & is.na(param[2]) == FALSE){
      scale_est <- est_gpd(x, param = c(NA, param[2]))[1]
      Z <- F_gpd(x, scale_est, param[2])
      stat <- W2(Z)
      out <- list(Method = "Cramér-von Mises Test for Goodness-of-Fit", Distribution = "Generalized Pareto", n = n, Estimated = "scale", Parameters = c(as.character(scale_est),", ",as.character(param[2])), Statistic = stat, Statistic_Name = "W^2", Critical = "https://www.tandfonline.com/doi/pdf/10.1198/00401700152672573?casa_token=FKsCzUZmFBYAAAAA:jAf6TceZfULvHuXR3_fu80ykBxgiNhzxTumiQVVFL_iUbUt0Uw_SVawlOFml_cQcp0EXg6IJgkJH")
      class(out) <- "gof_test"
      return(out)
    }
    
    # scale known, shape unknown, Case 2
    if(is.na(param[1]) == FALSE & is.na(param[2]) == TRUE){
      shape_est <- est_gpd(x, param = c(param[1], NA))[2]
      Z <- F_gpd(x, param[1], shape_est)
      stat <- W2(Z)
      out <- list(Method = "Cramér-von Mises Test for Goodness-of-Fit", Distribution = "Generalized Pareto", n = n, Estimated = "shape", Parameters = c(as.character(param[1]),", ",as.character(shape_est)), Statistic = stat, Statistic_Name = "W^2", Critical = "https://www.tandfonline.com/doi/pdf/10.1198/00401700152672573?casa_token=FKsCzUZmFBYAAAAA:jAf6TceZfULvHuXR3_fu80ykBxgiNhzxTumiQVVFL_iUbUt0Uw_SVawlOFml_cQcp0EXg6IJgkJH")
      class(out) <- "gof_test"
      return(out)
    }
    
    # both unknown, Case 3
    if(is.na(param[1]) == TRUE & is.na(param[2]) == TRUE){
      scale_est <- est_gpd(x, param = c(NA, NA))[1]
      shape_est <- est_gpd(x, param = c(NA, NA))[2]
      Z <- F_gpd(x, scale_est, shape_est)
      stat <- W2(Z)
      out <- list(Method = "Cramér-von Mises Test for Goodness-of-Fit", Distribution = "Generalized Pareto", n = n, Estimated = "scale, shape", Parameters = c(as.character(scale_est),", ",as.character(shape_est)), Statistic = stat, Statistic_Name = "W^2", Critical = "https://www.tandfonline.com/doi/pdf/10.1198/00401700152672573?casa_token=FKsCzUZmFBYAAAAA:jAf6TceZfULvHuXR3_fu80ykBxgiNhzxTumiQVVFL_iUbUt0Uw_SVawlOFml_cQcp0EXg6IJgkJH")
      class(out) <- "gof_test"
      return(out)
    }
  }
    


  # Anderson Darling
  if(statistic == "ad"){
    
    
    # scale unknown, shape known, Case 1
    if(is.na(param[1]) == TRUE & is.na(param[2]) == FALSE){
      scale_est <- est_gpd(x, param = c(NA, param[2]))[1]
      Z <- F_gpd(x, scale_est, param[2])
      stat <- A2(Z)
      out <- list(Method = "Anderson-Darling Test for Goodness-of-Fit", Distribution = "Generalized Pareto", n = n, Estimated = "scale", Parameters = c(as.character(scale_est),", ",as.character(param[2])), Statistic = stat, Statistic_Name = "A^2", Critical = "https://www.tandfonline.com/doi/pdf/10.1198/00401700152672573?casa_token=FKsCzUZmFBYAAAAA:jAf6TceZfULvHuXR3_fu80ykBxgiNhzxTumiQVVFL_iUbUt0Uw_SVawlOFml_cQcp0EXg6IJgkJH")
      class(out) <- "gof_test"
      return(out)
    }
    
    # scale known, shape unknown, Case 2
    if(is.na(param[1]) == FALSE & is.na(param[2]) == TRUE){
      shape_est <- est_gpd(x, param = c(param[1], NA))[2]
      Z <- F_gpd(x, param[1], shape_est)
      stat <- A2(Z)
      out <- list(Method = "Anderson-Darling Test for Goodness-of-Fit", Distribution = "Generalized Pareto", n = n, Estimated = "shape", Parameters = c(as.character(param[1]),", ",as.character(shape_est)), Statistic = stat, Statistic_Name = "A^2", Critical = "https://www.tandfonline.com/doi/pdf/10.1198/00401700152672573?casa_token=FKsCzUZmFBYAAAAA:jAf6TceZfULvHuXR3_fu80ykBxgiNhzxTumiQVVFL_iUbUt0Uw_SVawlOFml_cQcp0EXg6IJgkJH")
      class(out) <- "gof_test"
      return(out)
    }
    
    # both unknown, Case 3
    if(is.na(param[1]) == TRUE & is.na(param[2]) == TRUE){
      scale_est <- est_gpd(x, param = c(NA, NA))[1]
      shape_est <- est_gpd(x, param = c(NA, NA))[2]
      Z <- F_gpd(x, scale_est, shape_est)
      stat <- A2(Z)
      out <- list(Method = "Anderson-Darling Test for Goodness-of-Fit", Distribution = "Generalized Pareto", n = n, Estimated = "scale, shape", Parameters = c(as.character(scale_est),", ",as.character(shape_est)), Statistic = stat, Statistic_Name = "A^2", Critical = "https://www.tandfonline.com/doi/pdf/10.1198/00401700152672573?casa_token=FKsCzUZmFBYAAAAA:jAf6TceZfULvHuXR3_fu80ykBxgiNhzxTumiQVVFL_iUbUt0Uw_SVawlOFml_cQcp0EXg6IJgkJH")
      class(out) <- "gof_test"
      return(out)
    }
  }
}
